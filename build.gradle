import groovy.io.FileType

apply plugin: 'java'
apply plugin: 'eclipse'

archivesBaseName = "AmadeusCore"
version = "2.0.0.0-alpha"

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

eclipse {
	project {
		name = 'AmadeusCore'
	}
}

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
    main {
        output.dir(generatedResources, builtBy: "generateResources")
    }
}

task generateResources(dependsOn: processResources) {
	doLast {
		def list = []
		def out = new File(generatedResources, 'amadeus/languages')
		out.mkdirs()
		out = new File(generatedResources, 'amadeus/languages/langlist.txt')
		def folder = new File(sourceSets.main.output.resourcesDir, '/amadeus/languages')
		folder.eachFileRecurse FileType.FILES,  { file ->
			if (file.name.endsWith(".lang") || file.name.endsWith(".cmds"))
				list << file.name
		}
		out.text = list.join("\n")
	}
}

task fatJar(type: Jar) {
    baseName = project.name + "-all"
    from {
    	configurations.compile.collect {
    		it.isDirectory() ? it : zipTree(it)
    	}
    }
    with jar
}

repositories {
    jcenter()
    maven {
    	url  "https://jitpack.io"
    }
}

dependencies {
	compile "com.discord4j:Discord4J:2.10.1"
	compile "org.xerial:sqlite-jdbc:3.8.11.2"
	compile "com.google.code.gson:gson:2.8.2"
	compile "org.apache.logging.log4j:log4j-slf4j-impl:2.7"
	compile "org.apache.logging.log4j:log4j-api:2.7" 
    compile "org.apache.logging.log4j:log4j-core:2.7"
}